class LevelData {

    static get ease() {
        let points = [0,0,50,0,100,0,150,0,175,-17,250,0,300,0,333,-22,400,0,452,-1,514,-22,650,74,673,74,733,46,770,32,795,24,824,13,850,0,881,-16,897,10,981,-4,992,17,1001,4,1085,61,1200,0,1274,-62,1289,0,1319,-1,1457,73,1480,50,1503,50,1552,64,1620,2,1654,21,1719,-38,1765,-12,1838,-79,1908,-80,1974,-63,2009,-43,2033,-17,2050,0,2093,21,2150,0,2180,0,2233,33,2266,11,2299,33,2330,12,2358,34,2386,12,2416,34,2445,10,2476,30,2504,9,2571,9,2582,68,2594,12,2688,-27,2735,3,2781,-11,2799,-28,2815,25,2881,67,3006,-55,3081,-39,3148,-60,3177,-27,3201,-1,3234,0,3284,0,3334,0,3384,0,3446,-45,3501,1,3573,-24,3582,0,3629,-25,3669,-25,3682,13,3690,-17,3731,-15,3743,13,3932,0,3982,0,4032,0,4077,-127];
        return LevelData.calculateLevel(points);
    }

    static get normal() {
        let points = [0,0,50,0,100,0,152,-14,270,44,307,19,341,20,417,49,442,30,464,50,495,51,515,32,662,-80,669,-56,680,-66,769,0,802,-21,830,7,902,-19,950,0,986,-24,1004,0,1037,-22,1045,-1,1081,-21,1103,0,1147,-1,1252,81,1323,81,1419,22,1481,22,1539,-20,1589,0,1646,-46,1681,-20,1744,-72,1765,-1,1786,-22,1881,67,1945,18,1988,18,2045,-2,2094,-4,2117,24,2137,12,2172,12,2199,38,2215,24,2251,24,2271,48,2291,34,2326,34,2389,92,2578,-89,2610,-89,2633,-29,2769,54,2812,4,2853,22,2901,1,2976,65,3051,-14,3101,2,3180,6,3195,0,3204,75,3210,1,3295,56,3354,2,3399,2,3440,1,3482,2,3523,1,3571,0,3650,-38,3657,1,3694,0,3720,-1,3872,74,3955,42,4014,25,4055,25,4098,71,4105,71,4131,51,4166,46,4198,46,4267,1,4298,0,4348,0,4398,0,4448,0,4498,0,4547,-108];
        return LevelData.calculateLevel(points);
    }

    static get hard() {
        let points = [0,0,50,0,104,-23,176,18,282,-54,291,11,298,-54,378,-4,434,-29,487,-1,550,-41,557,0,562,-41,588,-41,593,0,600,-40,715,27,727,113,752,41,842,74,973,-19,997,55,1016,55,1029,12,1084,9,1137,-3,1286,-136,1314,60,1334,-110,1513,18,1519,60,1527,23,1536,61,1542,26,1550,62,1558,29,1571,63,1573,35,1686,0,1737,-32,1791,-61,1854,-95,2031,26,2077,2,2097,108,2136,0,2186,0,2236,0,2286,0,2336,0,2386,0,2426,147,2445,35,2497,34,2531,146,2550,68,2597,67,2625,141,2649,90,2693,89,2728,138,2789,138,2970,55,3024,68,3035,120,3047,71,3086,58,3097,114,3109,57,3148,45,3158,106,3170,43,3210,30,3221,96,3227,30,3331,-17,3352,5,3380,5,3404,-18,3495,0,3545,0,3595,0,3645,0,3695,0,3745,0,3795,0,3837,-77];
        return LevelData.calculateLevel(points);
    }

    static calculateLevel(points) {
        let levelData = [];      
    
        for (let i=0; i < points.length; i+=2) {
            let x1 = points[i];
            let y1 = points[i+1];
    
            let x2 = points[i+2];
            let y2 = points[i+3];
    
            let dx = x2 - x1;
            let dy = y2 - y1;
            let dd = Math.sqrt(dx*dx + dy*dy);
    
            let p1x = x1 + dx * 0.3;
            let p1y = y1;
    
            let p2x = x1 + dx * 0.6;
            let p2y = y2;
    
            let num = Math.ceil(dd / 5);
    
            for (let j=0; j<num; j++) {
                let t1 = j/num;
                let t2 = (j+1)/num;
    
                let bx1 = Utility.bezier3(t1, x1, p1x, p2x, x2);
                let by1 = Utility.bezier3(t1, y1, p1y, p2y, y2);
    
                let bx2 = Utility.bezier3(t2, x1, p1x, p2x, x2);
                let by2 = Utility.bezier3(t2, y1, p1y, p2y, y2);                               
                
                let dbx = bx2 - bx1;
                let dby = by2 - by1;
    
                let partData = {
                    position: {x:bx1 + dbx/2, y:by1 + dby/2},
                    shape: [
                        {x:0, y:-dby/2},
                        {x:dbx, y:dby/2},
                        {x:dbx, y:50},
                        {x:0, y:50}
                    ]
                };
    
                levelData.push(partData);            
            }
        }
        
        return levelData;
    }

    static get(difficulty) {
        switch (difficulty) {
            case 1: return LevelData.ease;
            case 2: return LevelData.normal;
            case 3: return LevelData.hard;
        }
    }
}